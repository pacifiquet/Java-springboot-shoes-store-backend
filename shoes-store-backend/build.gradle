plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.sonarqube" version "4.2.1.3168"
	id 'jacoco'
}


group = 'com.store'
version = '1'

java {
	sourceCompatibility = '17'
}

jacoco {
	toolVersion = "0.8.7"
}


test {
	jacoco {
		enabled = true
	}
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sonarqube {
	properties {
		property 'sonar.host.url', 'http://localhost:9000'
		property "sonar.login", "admin"
		property "sonar.password", "store"
		property "sonar.projectKey", "shoes-store"
		property 'sonar.projectName', "shoes-store"
		property 'sonar.java.source', 17
		property 'sonar.junit.reportPaths', 'build/results'
		property 'encoding', 'UTF-8'
		property 'charSet', 'UTF-8'
		property "sonar.coverage.jacoco.xmlReportPaths", "jacocoTestReport.xml"
	}
}

repositories {
	mavenCentral()
}

javadoc {
	failOnError true
}

springBoot {
	buildInfo()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'com.amazonaws:aws-java-sdk-secretsmanager:1.12.573'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.573'
	implementation 'com.sendgrid:sendgrid-java:4.9.3'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'com.opencsv:opencsv:5.8'
	testImplementation 'org.projectlombok:lombok:1.18.28'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.springframework.security:spring-security-test:6.1.2'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'

}

def profiles = "test"

bootRun{
	args = ["--spring.profiles.active=" + profiles]
}

tasks.named('sonarqube'){
	dependsOn jacocoTestReport
}


tasks.named('test') {
	useJUnitPlatform()
}


