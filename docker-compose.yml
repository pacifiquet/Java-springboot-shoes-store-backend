version: "3.1"

services:
#  shoes-store-api:
#    build:
#      context: .
#    container_name: shoes-store-backend
#    restart: unless-stopped
#    depends_on:
#      postgres:
#        condition: service_healthy
#    networks:
#      - postgres
#
#    ports:
#      - "8081:8081"
#    volumes:
#      - .m2:/root/.m2
#    stdin_open: true
#    tty: true


  postgres:
    container_name: shoes-store-db
    image: postgres
    environment:
      POSTGRES_USER: pacifique
      POSTGRES_PASSWORD: pacifique
      POSTGRES_DB: storedb
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "pacifique" ,'-d','storedb','-h','postgres','-p','5432']

      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: shoes-store-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@gmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge
volumes:
  postgresql_data:
  pgadmin: